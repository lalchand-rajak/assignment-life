apiVersion: v1
kind: ConfigMap
metadata:
  namespace: monitoring
  name: alloy-config
data:
  alloy-config.river: |-
    logging {
      level  = "debug"
      format = "logfmt"
    }

    discovery.kubernetes "pods" {
      role = "pod"
    }

    discovery.relabel "pods" {
      targets = discovery.kubernetes.pods.targets

      rule {
        source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_label_app_kubernetes_io_name", "__meta_kubernetes_pod_container_name"]
        separator     = "/"
        target_label  = "deployment_name"
        action        = "replace"
      }
    }

    loki.source.kubernetes "pods" {
      targets    = discovery.relabel.pods.output
      forward_to = [loki.process.process.receiver]
    }

    loki.process "process" {
      forward_to = [loki.write.loki.receiver]

      stage.drop {
        older_than          = "1h"
        drop_counter_reason = "too old"
      }

      stage.match {
        selector = "{instance=~\".*\"}"
        stage.json {
          expressions = {
            level = "level",
          }
        }
        stage.labels {
          values = {
            level = "level",
          }
        }
      }

      stage.label_drop {
        values = ["job", "service_name"]
      }
    }

    loki.write "loki" {
      endpoint {
        url = "http://loki-write:3100/loki/api/v1/push"
      }
    }

    loki.echo "example" {}

---
# Deployment (unchanged)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-alloy
  namespace: monitoring
  labels:
    app: grafana-alloy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana-alloy
  template:
    metadata:
      labels:
        app: grafana-alloy
    spec:
      containers:
        - name: grafana-alloy
          image: grafana/alloy:latest
          args:
            - "run"
            - "/etc/alloy/alloy-config.river"
          ports:
            - containerPort: 3101
              name: http
          volumeMounts:
            - name: config-volume
              mountPath: "/etc/alloy"  # Ensure no trailing slash issues
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 3101
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 3101
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      volumes:
        - name: config-volume
          configMap:
            name: alloy-config

---
# Service (fixed: removed "BRE" from selector)
apiVersion: v1
kind: Service
metadata:
  namespace: monitoring
  name: grafana-alloy
spec:
  selector:
    app: grafana-alloy
  ports:
    - protocol: TCP
      port: 3101
      targetPort: 3101
  type: ClusterIP